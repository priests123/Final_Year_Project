package Display;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;

import javax.swing.*;
import javax.swing.JFormattedTextField.AbstractFormatter;

import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

public class StatisticsGUI {

	class Names {
		public static final String IMPORT = "Import";
	}
	
	//private JLabel label = new JLabel();
	private JButton theBtImport = new JButton(Names.IMPORT);	
	private Actions theCB = new Actions();
	static Container rootWindow;
	private JComboBox routeSelect = new JComboBox();
	
	
	private SpinnerDateModel smFrom = new SpinnerDateModel();
	private SpinnerDateModel smTo = new SpinnerDateModel();
	private JSpinner timeFrom = new JSpinner(smFrom);
	private JSpinner timeTo = new JSpinner(smTo);
	private JSpinner.DateEditor deFrom = new JSpinner.DateEditor(timeFrom, "HH:mm:ss");
	private JSpinner.DateEditor deTo = new JSpinner.DateEditor(timeTo, "HH:mm:ss");
	Calendar cal = Calendar.getInstance();
	
	
	
	ArrayList<String> values = new ArrayList<String>();
	
	public static String routeSelected = "";
	
	public StatisticsGUI(RootPaneContainer rpc) { 
		
		
		Container cp = rpc.getContentPane();
		rootWindow = (Container) rpc;
		cp.setLayout(null);
		
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		
		int height = screenSize.height;
		int width = screenSize.width;
		
		int H = height - (height / 5);
		int W = width - (width / 5);
		
		rootWindow.setSize(W, H);
		rootWindow.setLocation((width / 2 - W/2), (height / 2 - H/2));
		
		theBtImport.setBounds(W - 170, 30, 120, 40);
		theBtImport.addActionListener(theCB);
		theBtImport.setFont(Global.font2);
		cp.add(theBtImport);
		
		routeSelect.setBounds(30, 30, 500, 26);
		routeSelect.addActionListener(theCB);
		routeSelect.addItem("");
		routeSelect.setFont(Global.font2);
		values = RouteSelectValues.populateAllRoutes();	
		for(int a = 0; a < values.size(); a++){
			routeSelect.addItem(values.get(a));
		}
		cp.add(routeSelect);
		
		cal.set(Calendar.HOUR_OF_DAY, 0);
		cal.set(Calendar.MINUTE, 0);
		cal.set(Calendar.SECOND, 0);
		Date date = cal.getTime();
		
		
		timeFrom.setValue(date);
		timeFrom.setEditor(deFrom);
		timeFrom.setBounds(800, 30, 100, 26);
		timeFrom.setFont(Global.font2);
		cp.add(timeFrom);
		
		timeTo.setValue(date);
		timeTo.setEditor(deTo);
		timeTo.setBounds(100, 500, 100, 26);
		timeTo.setFont(Global.font2);
		cp.add(timeTo);
		
		
		UtilDateModel modelFrom = new UtilDateModel();
		Properties p = new Properties();
		p.put("text.today", "Today");
		p.put("text.month", "Month");
		p.put("text.year", "Year");
		JDatePanelImpl datePanelFrom = new JDatePanelImpl(modelFrom, p);
		JDatePickerImpl dateFrom = new JDatePickerImpl(datePanelFrom, new DateLabelFormatter());
		dateFrom.setBounds(580, 30, 200,26);
		cp.add(dateFrom);
		
		UtilDateModel modelTo = new UtilDateModel();
		JDatePanelImpl datePanelTo = new JDatePanelImpl(modelTo, p);
		JDatePickerImpl dateTo = new JDatePickerImpl(datePanelTo, new DateLabelFormatter());
		dateTo.setBounds(920, 30, 200, 26);
		cp.add(dateTo);
		
		
		
		
		
		
		
		
		
		
		rootWindow.setVisible(true);
		
	}

class Actions implements ActionListener{
	public void actionPerformed(ActionEvent ae) {
		//System.out.println("HEY");
		String actionIs = ae.getActionCommand();
			
		if(actionIs.equals(Names.IMPORT)){
			rootWindow.setVisible(false);
			Main.displayImportGUI();
		}
	
		Object c = ae.getSource();
		
		if(c == routeSelect){
			routeSelected = routeSelect.getSelectedItem().toString();
			System.out.println(routeSelected);
		}
		
		
	}
}
	
public static void setStatisticsGUIVisible(){
	rootWindow.setVisible(true);
}
	
	
}
