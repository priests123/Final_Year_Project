package Display;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.*;

import javax.swing.*;

import org.jdatepicker.impl.*;


public class StatisticsGUI extends Component{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	class Names {
		public static final String IMPORT = "Import";
		public static final String SEARCH = "Search";
		public static final String CLEAR = "Clear";
	}
	

	private JButton theBtImport = new JButton(Names.IMPORT);	
	private JButton theBtSearch = new JButton(Names.SEARCH);
	private JButton theBtClear = new JButton(Names.CLEAR);
	private Actions theCB = new Actions();
	static Container rootWindow;
	private JComboBox<String> routeSelect = new JComboBox<String>();
	
	
	private SpinnerDateModel smFrom = new SpinnerDateModel();
	private SpinnerDateModel smTo = new SpinnerDateModel();
	private JSpinner timeFrom = new JSpinner(smFrom);
	private JSpinner timeTo = new JSpinner(smTo);
	private JSpinner.DateEditor deFrom = new JSpinner.DateEditor(timeFrom, "HH:mm:ss");
	private JSpinner.DateEditor deTo = new JSpinner.DateEditor(timeTo, "HH:mm:ss");
	Calendar cal = Calendar.getInstance();
	
	private JLabel lblIntro = new JLabel();
	private JLabel lblIntro2 = new JLabel();
	private JLabel lblRoute = new JLabel();
	private JLabel lblDateFrom = new JLabel();
	private JLabel lblTimeFrom = new JLabel();
	private JLabel lblDateTo = new JLabel();
	private JLabel lblTimeTo = new JLabel();
	
	private JLabel logo = new JLabel();
	
	ArrayList<String> values = new ArrayList<String>();
	
	public static String routeSelected = "";
	
	public StatisticsGUI(RootPaneContainer rpc) { 
		
		
		Container cp = rpc.getContentPane();
		rootWindow = (Container) rpc;
		cp.setLayout(null);
		
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		int height = screenSize.height;
		int width = screenSize.width;
		int H = 900;
		int W = 1600;
		rootWindow.setSize(W, H);
		rootWindow.setLocation((width / 2 - W/2), (height / 2 - H/2));
		
		

		lblIntro.setBounds(10, 10, 1200, 20);
		lblIntro.setText("Welcome to understanding your routes. To get started, use the below route, date & time selectors to set what data you'd like to see. Then click search to see the current timing data for");
		lblIntro.setFont(Global.font2);
		cp.add(lblIntro);
		
		lblIntro2.setBounds(10, 27, 1200, 20);
		lblIntro2.setText("the route. To import new data into the system, click the import button on the right hand side.");
		lblIntro2.setFont(Global.font2);
		cp.add(lblIntro2);
		
		logo.setIcon(new ImageIcon("logo.png"));
		logo.setBounds(1283, 0, 300, 150);
        cp.add(logo);
		
        
		lblRoute.setBounds(10, 90, 100, 30);
		lblRoute.setText("Routes");
		lblRoute.setFont(Global.font1);
		cp.add(lblRoute);
		
		lblDateFrom.setBounds(500, 90, 100, 30);
		lblDateFrom.setText("Date from");
		lblDateFrom.setFont(Global.font1);
		cp.add(lblDateFrom);
		
		lblTimeFrom.setBounds(670, 90, 100, 30);
		lblTimeFrom.setText("Time from");
		lblTimeFrom.setFont(Global.font1);
		cp.add(lblTimeFrom);
		
		lblDateTo.setBounds(810, 90, 100, 30);
		lblDateTo.setText("Date to");
		lblDateTo.setFont(Global.font1);
		cp.add(lblDateTo);
		
		lblTimeTo.setBounds(980, 90, 100, 30);
		lblTimeTo.setText("Time to");
		lblTimeTo.setFont(Global.font1);
		cp.add(lblTimeTo);
		
		
		routeSelect.setBounds(10, 124, 450, 26);
		routeSelect.addActionListener(theCB);
		routeSelect.addItem("");
		routeSelect.setFont(Global.font2);
		values = RouteSelectValues.populateAllRoutes();	
		for(int a = 0; a < values.size(); a++){
			routeSelect.addItem(values.get(a));
		}
		cp.add(routeSelect);
		
		UtilDateModel modelFrom = new UtilDateModel();
		Properties p = new Properties();
		p.put("text.today", "Today");
		p.put("text.month", "Month");
		p.put("text.year", "Year");
		JDatePanelImpl datePanelFrom = new JDatePanelImpl(modelFrom, p);
		JDatePickerImpl dateFrom = new JDatePickerImpl(datePanelFrom, new DateLabelFormatter());
		dateFrom.setBounds(500, 124, 150,26);
		cp.add(dateFrom);
		
		UtilDateModel modelTo = new UtilDateModel();
		JDatePanelImpl datePanelTo = new JDatePanelImpl(modelTo, p);
		JDatePickerImpl dateTo = new JDatePickerImpl(datePanelTo, new DateLabelFormatter());
		dateTo.setBounds(810, 124, 150, 26);
		cp.add(dateTo);
		
		cal.set(Calendar.HOUR_OF_DAY, 0);
		cal.set(Calendar.MINUTE, 0);
		cal.set(Calendar.SECOND, 0);
		Date date = cal.getTime();
		
		timeFrom.setValue(date);
		timeFrom.setEditor(deFrom);
		timeFrom.setBounds(670, 124, 100, 26);
		timeFrom.setFont(Global.font2);
		cp.add(timeFrom);
		
		timeTo.setValue(date);
		timeTo.setEditor(deTo);
		timeTo.setBounds(980, 124, 100, 26);
		timeTo.setFont(Global.font2);
		cp.add(timeTo);
		
		
		theBtClear.setBounds(1130, 80, 100, 30);
		theBtClear.addActionListener(theCB);
		theBtClear.setFont(Global.font1);
		cp.add(theBtClear);
		
		theBtSearch.setBounds(1130, 120, 100, 30);
		theBtSearch.addActionListener(theCB);
		theBtSearch.setFont(Global.font1);
		cp.add(theBtSearch);
		
		theBtImport.setBounds(1130, 40, 100, 30);
		theBtImport.addActionListener(theCB);
		theBtImport.setFont(Global.font1);
		cp.add(theBtImport);
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		rootWindow.setVisible(true);
		
	}

class Actions implements ActionListener{
	public void actionPerformed(ActionEvent ae) {
		//System.out.println("HEY");
		String actionIs = ae.getActionCommand();
			
		if(actionIs.equals(Names.IMPORT)){
			rootWindow.setVisible(false);
			Main.displayImportGUI();
		}
		
		if(actionIs.equals(Names.CLEAR)){
			
		}
	
		Object c = ae.getSource();
		
		if(c == routeSelect){
			routeSelected = routeSelect.getSelectedItem().toString();
			System.out.println(routeSelected);
		}
		
		
	}
}
	
public static void setStatisticsGUIVisible(){
	rootWindow.setVisible(true);
}
	


	
}
